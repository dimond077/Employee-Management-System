{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/radio\";\nimport * as i10 from \"@angular/material/checkbox\";\nimport * as i11 from \"@angular/material/divider\";\nimport * as i12 from \"@angular/material/button\";\nexport class EmployeeComponent {\n  constructor(employeeService, router, activatedRoute) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.isCreateEmployee = true;\n    this.skills = [];\n  }\n  ngOnInit() {\n    this.employee = this.activatedRoute.snapshot.data['employee'];\n    console.log(this.employee);\n    if (this.employee && this.employee.employeeId > 0) {\n      this.isCreateEmployee = false;\n      if (this.employee.employeeSkills != '') {\n        this.skills = [];\n        this.skills = this.employee.employeeSkills.split(',');\n      }\n    } else {\n      this.isCreateEmployee = true;\n    }\n  }\n  checkSkills(skill) {\n    return this.employee.employeeSkills != null && this.employee.employeeSkills.includes(skill);\n  }\n  checkGender(gender) {\n    return this.employee.employeeGender != null && this.employee.employeeGender == gender;\n  }\n  saveEmployee(employeeForm) {\n    if (this.isCreateEmployee) {\n      this.employeeService.saveEmployee(this.employee).subscribe({\n        next: res => {\n          console.log(res);\n          employeeForm.reset();\n          this.employee.employeeGender = '';\n          this.skills = [];\n          this.employee.employeeSkills = '';\n          this.router.navigate([\"/employee-list\"]);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    } else {\n      this.employeeService.updateEmployee(this.employee).subscribe({\n        next: res => {\n          this.router.navigate([\"/employee-list\"]);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  selectGender(gender) {\n    this.employee.employeeGender = gender;\n  }\n  onSkillsChanges(event) {\n    console.log(event);\n    if (event.checked) {\n      this.skills.push(event.source.value);\n    } else {\n      this.skills.forEach((item, index) => {\n        if (item == event.source.value) {\n          this.skills.splice(index, 1);\n        }\n      });\n    }\n    this.employee.employeeSkills = this.skills.toString();\n  }\n}\n_class = EmployeeComponent;\n_class.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-employee\"]],\n  decls: 73,\n  vars: 12,\n  consts: [[1, \"container\"], [\"align\", \"right\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/employee-list\"], [1, \"card\", \"p-5\", \"mt-2\"], [3, \"ngSubmit\"], [\"employeeForm\", \"ngForm\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Employee Id\", \"name\", \"employeeId\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Employee Name\", \"name\", \"employeeName\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Contact Number\", \"name\", \"employeeContactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Address\", \"name\", \"employeeAddress\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"employeeDepartment\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"IT\"], [\"value\", \"Network\"], [\"value\", \"Repair\"], [\"aria-label\", \"Select an option\"], [\"value\", \"M\", 3, \"checked\", \"click\"], [\"value\", \"F\", 3, \"checked\", \"click\"], [\"appearance\", \"outline\", 1, \"mt-2\"], [\"matInput\", \"\", \"placeholder\", \"Employee Skills\", \"name\", \"employeeSkills\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"example-section\"], [\"value\", \"Java\", 1, \"example-margin\", 3, \"checked\", \"change\"], [\"value\", \"Angular\", 1, \"example-margin\", 3, \"checked\", \"change\"], [\"value\", \"Spring Boot\", 1, \"example-margin\", 3, \"checked\", \"change\"], [\"value\", \"AWS\", 1, \"example-margin\", 3, \"checked\", \"change\"], [1, \"text-center\", \"mt-3\"], [\"mat-raised-button\", \"\", 1, \"m-2\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"m-2\"]],\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Go to Employee List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function EmployeeComponent_Template_form_ngSubmit_5_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.saveEmployee(_r0));\n      });\n      i0.ɵɵelementStart(7, \"mat-form-field\", 6)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Employee Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.employee.employeeId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-icon\", 8);\n      i0.ɵɵtext(12, \"sentiment_very_satisfied\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Employee Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.employee.employeeName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-icon\", 8);\n      i0.ɵɵtext(18, \"person\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"mat-form-field\", 6)(20, \"mat-label\");\n      i0.ɵɵtext(21, \"Contact Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.employee.employeeContactNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"mat-icon\", 8);\n      i0.ɵɵtext(24, \"call\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"mat-form-field\", 6)(26, \"mat-label\");\n      i0.ɵɵtext(27, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.employee.employeeAddress = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-icon\", 8);\n      i0.ɵɵtext(30, \"apartment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"mat-form-field\")(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Choose your department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_mat_select_ngModelChange_34_listener($event) {\n        return ctx.employee.employeeDepartment = $event;\n      });\n      i0.ɵɵelementStart(35, \"mat-option\", 13);\n      i0.ɵɵtext(36, \"IT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"mat-option\", 14);\n      i0.ɵɵtext(38, \"Network\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-option\", 15);\n      i0.ɵɵtext(40, \"Repair\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\")(42, \"Label\");\n      i0.ɵɵtext(43, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"mat-radio-group\", 16)(45, \"mat-radio-button\", 17);\n      i0.ɵɵlistener(\"click\", function EmployeeComponent_Template_mat_radio_button_click_45_listener() {\n        return ctx.selectGender(\"M\");\n      });\n      i0.ɵɵtext(46, \"M\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"mat-radio-button\", 18);\n      i0.ɵɵlistener(\"click\", function EmployeeComponent_Template_mat_radio_button_click_47_listener() {\n        return ctx.selectGender(\"F\");\n      });\n      i0.ɵɵtext(48, \"F\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"mat-form-field\", 19)(50, \"mat-label\");\n      i0.ɵɵtext(51, \"Employee Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_52_listener($event) {\n        return ctx.employee.employeeSkills = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"mat-icon\", 8);\n      i0.ɵɵtext(54, \"menu_book\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"div\")(56, \"Label\");\n      i0.ɵɵtext(57, \"Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"section\", 21)(59, \"mat-checkbox\", 22);\n      i0.ɵɵlistener(\"change\", function EmployeeComponent_Template_mat_checkbox_change_59_listener($event) {\n        return ctx.onSkillsChanges($event);\n      });\n      i0.ɵɵtext(60, \"Java\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"mat-checkbox\", 23);\n      i0.ɵɵlistener(\"change\", function EmployeeComponent_Template_mat_checkbox_change_61_listener($event) {\n        return ctx.onSkillsChanges($event);\n      });\n      i0.ɵɵtext(62, \"Angular\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"mat-checkbox\", 24);\n      i0.ɵɵlistener(\"change\", function EmployeeComponent_Template_mat_checkbox_change_63_listener($event) {\n        return ctx.onSkillsChanges($event);\n      });\n      i0.ɵɵtext(64, \"Spring Boot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"mat-checkbox\", 25);\n      i0.ɵɵlistener(\"change\", function EmployeeComponent_Template_mat_checkbox_change_65_listener($event) {\n        return ctx.onSkillsChanges($event);\n      });\n      i0.ɵɵtext(66, \"AWS\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(67, \"mat-divider\");\n      i0.ɵɵelementStart(68, \"div\", 26)(69, \"button\", 27);\n      i0.ɵɵtext(70, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"button\", 28);\n      i0.ɵɵtext(72, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeName);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeContactNumber);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeAddress);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeDepartment);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"checked\", ctx.checkGender(\"M\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checkGender(\"F\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeSkills);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"checked\", ctx.checkSkills(\"Java\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checkSkills(\"Angular\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checkSkills(\"Spring Boot\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checkSkills(\"AWS\"));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.MatFormField, i4.MatLabel, i4.MatSuffix, i5.MatInput, i6.MatIcon, i7.MatSelect, i8.MatOption, i9.MatRadioGroup, i9.MatRadioButton, i10.MatCheckbox, i11.MatDivider, i12.MatButton],\n  styles: [\".example-section[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    height: 60;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n    margin: 0 10px;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUvZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNjA7XG59XG5cbi5leGFtcGxlLW1hcmdpbiB7XG4gICAgbWFyZ2luOiAwIDEwcHg7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EmployeeComponent","constructor","employeeService","router","activatedRoute","isCreateEmployee","skills","ngOnInit","employee","snapshot","data","console","log","employeeId","employeeSkills","split","checkSkills","skill","includes","checkGender","gender","employeeGender","saveEmployee","employeeForm","subscribe","next","res","reset","navigate","error","err","updateEmployee","selectGender","onSkillsChanges","event","checked","push","source","value","forEach","item","index","splice","toString","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","EmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EmployeeComponent_Template_form_ngSubmit_5_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","EmployeeComponent_Template_input_ngModelChange_10_listener","$event","EmployeeComponent_Template_input_ngModelChange_16_listener","employeeName","EmployeeComponent_Template_input_ngModelChange_22_listener","employeeContactNumber","EmployeeComponent_Template_input_ngModelChange_28_listener","employeeAddress","EmployeeComponent_Template_mat_select_ngModelChange_34_listener","employeeDepartment","EmployeeComponent_Template_mat_radio_button_click_45_listener","EmployeeComponent_Template_mat_radio_button_click_47_listener","EmployeeComponent_Template_input_ngModelChange_52_listener","EmployeeComponent_Template_mat_checkbox_change_59_listener","EmployeeComponent_Template_mat_checkbox_change_61_listener","EmployeeComponent_Template_mat_checkbox_change_63_listener","EmployeeComponent_Template_mat_checkbox_change_65_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ag_rise\\Desktop\\Roshan\\projects\\Employee-Management-System\\crud-angular16-ui-main\\src\\app\\employee\\employee.component.ts","C:\\Users\\ag_rise\\Desktop\\Roshan\\projects\\Employee-Management-System\\crud-angular16-ui-main\\src\\app\\employee\\employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee.model';\nimport { NgForm } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  isCreateEmployee: boolean = true;\n\n  employee: any;\n\n  skills: string[] = [];\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.employee = this.activatedRoute.snapshot.data['employee'];\n\n    console.log(this.employee);\n\n    if (this.employee && this.employee.employeeId > 0) {\n      this.isCreateEmployee = false;\n      if (this.employee.employeeSkills != '') {\n        this.skills = [];\n        this.skills = this.employee.employeeSkills.split(',');\n      }\n    } else {\n      this.isCreateEmployee = true;\n    }\n\n  }\n\n  checkSkills(skill: string) {\n    return this.employee.employeeSkills != null && this.employee.employeeSkills.includes(skill);\n  }\n\n  checkGender(gender: string) {\n    return this.employee.employeeGender != null && this.employee.employeeGender == gender;\n  }\n\n  saveEmployee(employeeForm: NgForm): void {\n\n    if (this.isCreateEmployee) {\n      this.employeeService.saveEmployee(this.employee).subscribe(\n        {\n          next: (res: Employee) => {\n            console.log(res);\n            employeeForm.reset();\n            this.employee.employeeGender = '';\n            this.skills = [];\n            this.employee.employeeSkills = '';\n            this.router.navigate([\"/employee-list\"]);\n          },\n          error: (err: HttpErrorResponse) => {\n            console.log(err);\n          }\n        }\n      );\n    } else {\n      this.employeeService.updateEmployee(this.employee).subscribe(\n        {\n          next: (res: Employee) => {\n            this.router.navigate([\"/employee-list\"]);\n          },\n          error: (err: HttpErrorResponse) => {\n            console.log(err);\n          }\n        }\n      );\n    }\n  }\n\n  selectGender(gender: string): void {\n    this.employee.employeeGender = gender;\n  }\n\n  onSkillsChanges(event: any): void {\n    console.log(event);\n    if (event.checked) {\n      this.skills.push(event.source.value);\n    } else {\n      this.skills.forEach(\n        (item, index) => {\n          if (item == event.source.value) {\n            this.skills.splice(index, 1);\n          }\n        }\n      );\n    }\n\n    this.employee.employeeSkills = this.skills.toString();\n  }\n\n}\n","<div class=\"container\">\n\n    <div align=\"right\">\n        <button mat-raised-button color=\"accent\" routerLink=\"/employee-list\">Go to Employee List</button>\n    </div>\n\n    <div class=\"card p-5 mt-2\">\n\n       \n\n        <form #employeeForm=\"ngForm\" (ngSubmit)=\"saveEmployee(employeeForm)\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Employee Id</mat-label>\n                <input matInput placeholder=\"Employee Id\" name=\"employeeId\" [(ngModel)]=\"employee.employeeId\" disabled>\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Employee Name</mat-label>\n                <input matInput placeholder=\"Employee Name\" name=\"employeeName\" [(ngModel)]=\"employee.employeeName\">\n                <mat-icon matSuffix>person</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Contact Number</mat-label>\n                <input matInput placeholder=\"Contact Number\" name=\"employeeContactNumber\" [(ngModel)]=\"employee.employeeContactNumber\">\n                <mat-icon matSuffix>call</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <input matInput placeholder=\"Address\" name=\"employeeAddress\" [(ngModel)]=\"employee.employeeAddress\">\n                <mat-icon matSuffix>apartment</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Choose your department</mat-label>\n                <mat-select name=\"employeeDepartment\" [(ngModel)]=\"employee.employeeDepartment\">\n                    <mat-option value=\"IT\">IT</mat-option>\n                    <mat-option value=\"Network\">Network</mat-option>\n                    <mat-option value=\"Repair\">Repair</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <div>\n                <Label>Gender</Label>\n                <mat-radio-group aria-label=\"Select an option\">\n                    <mat-radio-button [checked]=\"checkGender('M')\" (click)=\"selectGender('M')\" value=\"M\">M</mat-radio-button>\n                    <mat-radio-button [checked]=\"checkGender('F')\" (click)=\"selectGender('F')\" value=\"F\">F</mat-radio-button>\n                </mat-radio-group>\n            </div>\n\n            <mat-form-field appearance=\"outline\" class=\"mt-2\">\n                <mat-label>Employee Skills</mat-label>\n                <input matInput placeholder=\"Employee Skills\" name=\"employeeSkills\" [(ngModel)]=\"employee.employeeSkills\" disabled>\n                <mat-icon matSuffix>menu_book</mat-icon>\n            </mat-form-field>\n\n            <div>\n                <Label>Skills</Label>\n                <section class=\"example-section\">\n                    <mat-checkbox (change)=\"onSkillsChanges($event)\" value=\"Java\" class=\"example-margin\" [checked]=\"checkSkills('Java')\">Java</mat-checkbox>\n                    <mat-checkbox (change)=\"onSkillsChanges($event)\" value=\"Angular\" class=\"example-margin\" [checked]=\"checkSkills('Angular')\">Angular</mat-checkbox>\n                    <mat-checkbox (change)=\"onSkillsChanges($event)\" value=\"Spring Boot\" class=\"example-margin\" [checked]=\"checkSkills('Spring Boot')\">Spring Boot</mat-checkbox>\n                    <mat-checkbox (change)=\"onSkillsChanges($event)\" value=\"AWS\" class=\"example-margin\" [checked]=\"checkSkills('AWS')\">AWS</mat-checkbox>\n                </section>\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <div class=\"text-center mt-3\">\n                <button mat-raised-button class=\"m-2\">Clear</button>\n                <button mat-raised-button color=\"primary\" class=\"m-2\">Save</button>\n            </div>\n\n        </form>\n\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}